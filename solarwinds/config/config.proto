// Copyright 2017 Istio Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package adapter.solarwinds.config;

import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";

option go_package = "config";
option (gogoproto.goproto_getters_all) = false;
option (gogoproto.equal_all) = false;
option (gogoproto.gostring_all) = false;

message Params {
    // AppOptics Access Token needed to send metrics to AppOptics. If no access token is given then metrics
    // will NOT be shipped to AppOptics
    string appoptics_access_token = 1;

    // Optional. Max batch size of metrics to be sent to AppOptics.
    // AppOptics does not allow batch size greater than 1000.
    // If this is not specified a default batch size of 1000 will be used.
    int32 appoptics_batch_size = 2;

    // Papertrail url to ship logs to. If no papertrail url is given then the logs will NOT be shipped but rather
    // dropped.
    string papertrail_url = 3;

    // This is the duration for which logs will be persisted locally until it is shipped to papertrail in the event
    // of a network failure
    google.protobuf.Duration papertrail_local_retention_duration = 4 [(gogoproto.nullable)=true, (gogoproto.stdduration) = true];

    // Describes how to represent an Istio metric in Solarwinds AppOptics
    message MetricInfo {
        // The name is used to register the metric.
        string name = 1;

        // Optional. A human readable description of this metric.
        string description = 2;

        // The names of labels to use: these need to match the dimensions of the Istio metric.
        repeated string label_names = 3;
    }

    // A map of Istio metric name to solarwinds metric info.
    map<string, MetricInfo> metrics = 5;

    // Describes how to represent an Istio metric in Solarwinds AppOptics
    message LogInfo {
        // Optional. A golang text/template template that will be executed to construct the payload for this log entry.
        // It will be given the full set of variables for the log to use to construct its result.
        // If it is not provided, a default template in place will be used.
        string payload_template = 1;
    }

    // A map of Istio logentry name to solarwinds log info.
    map<string, LogInfo> logs = 6;
}
